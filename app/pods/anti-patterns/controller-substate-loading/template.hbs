<h2>Controller Substate</h2>

{{#if isLoaded}}
  Handling loading in the Controller is an anti-pattern
{{else}}
  <h3>Loading....</h3>
{{/if}}

<PatternExplanation @showText="Explain why loading in the controller sucks">
  beyond muddying responsibilities, controllers were not designed to handle data the same way as routes.
  One of Ember's gotchas for beginners is:

  <h4>Controllers are singletons</h4>
  this means that once the controller is initialized, it will never re-initialize
  if you navigate away and back, isLoaded will always be true.
  the functions in Init will never fire again unless you refresh the page.

  <h4>Use Routes and Models for data loading and modifying Data</h4>
  loading data is just one of the things you <i>could</i> do with data in controllers.
  Ember provides a lot of awesome data helpers directly on the model which will make your life hella easier.

  <h4>Global Pattern Percpective</h4>
  <p>
  this part of bigger pattern of moving model related function out of controller or component.
  Every major framework is going in a component direction Make as stateless as possible.  
  controllers will soon be removed from Ember cause they are pointless beasts of burden.
  Controllers can do things that components can not, but nothing that it SHOULD be allowed to do if good patterns are established.

  <h4>Further Reading</h4>
  LINK APPLICABLE GLOBAL RULES HERE. For example: Getting High with State 
  </p>
</PatternExplanation>
